{
    "collab_server" : "",
    "contents" : "##############################################################################\n# title         : 03 -Extract_Visualise_Risk_by_Country.R;\n# purpose       : Extract blight units for countries growing potato;\n# producer      : prepared by A. Sparks;\n# last update   : in IRRI, Los Ba√±os, Jan 2016;\n# inputs        : raster opbject of late blight risk calculate by SimCast_Blight_Units.R;\n# outputs       : Matrix and graphs of blight unit accumulation for countries of interest;\n# remarks 1     : none;\n###############################################################################\n\n# Libraries -------------------------------------------------------------------\nlibrary(raster)\nlibrary(maptools)\nlibrary(ggplot2)\nlibrary(rgdal)\nlibrary(reshape)\nlibrary(dplyr)\nlibrary(readr)\n\n# Load Data --------------------------------------------------------------------\ntf_NE <- tempfile()\ntf_FAO <- tempfile()\n\n# Use only ONE of the following rasters sets at a time\n\nCRUCL2.0_risk <- raster(\"Cache/Global Blight Risk Maps/CRUCL2.0_SimCastMeta_Susceptible_Prediction.tif\")\nA2_risk <- raster(\"Cache/Global Blight Risk Maps/A2_SimCastMeta_Susceptible_Prediction.tif\")\n\n# or use only RESISTANT Blight Units\n#CRUCL2.0_risk <- raster(\"Cache/Global Blight Risk Maps/CRUCL2.0_SimCastMeta_Resistant_Prediction.tif\")\n#A2_risk <- raster(\"Cache/Global Blight Risk Maps/A2_SimCastMeta_Resistant_Prediction.tif\")\n\n# Download Natural Earth 1:50 Scale Data for  extracting data from FAO and making global map\nif (!file.exists(paste0(getwd(), \"/Data/ne_50m_admin_0_countries.shp\"))) {\n  download.file(\"http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/cultural/ne_50m_admin_0_countries.zip\", \n                tf_NE, mode = \"wb\")\n  unzip(tf_NE, exdir = \"Data\")\n}\n\nNE <- readOGR(dsn = \"Data\", layer = \"ne_50m_admin_0_countries\")\nNE <- crop(NE, extent(-180, 180, -60, 84)) # remove Antarctica from the data for cleaner map\n\n# Download crop production data from FAO\nif (!file.exists(paste0(getwd(), \"/Data/Production_Crops_E_All_Data.csv\"))) {\n  download.file(\"http://faostat.fao.org/Portals/_Faostat/Downloads/zip_files/Production_Crops_E_All_Data.zip\", \n                tf_FAO, mode = \"wb\") # this is a large file\n  FAO <- unzip(tf_FAO, exdir = \"Data\") # unzip csv file from FAO\n}\n\nFAO <- read_csv(\"Data/Production_Crops_E_All_Data.csv\")\n\n# Data munging -----------------------------------------------------------------\nFAO <- subset(FAO, CountryCode < 5000) # select only countries, not areas\nFAO <- subset(FAO, Year == max(FAO$Year)) # select the most recent year available\nFAO <- subset(FAO, Item == \"Potatoes\") # select only potatoes\nFAO <- FAO[, -11] # drop the flag column\n\nyield <- subset(FAO, Element == \"Yield\") # select for yield\nproduction <- subset(FAO, Element == \"Area harvested\") # Select for area harvested\nnames(production)[9:10] <- c(\"AreaUnit\", \"AreaHarvested\") # Rename the production columns\nFAO <- merge(production, yield, by = c( \"CountryCode\", \"Country\", \"ItemCode\",\n                                        \"Item\", \"Year\")) \nnames(FAO)[14:15] <- c(\"YieldUnit\", \"Yield\") \n\n# Replace names of countries that will not match rworldmap data names \nFAO <- subset(FAO, Country != \"China\")\nFAO[, 2][FAO[, 2] == \"China, mainland\"] <- \"China\"\nFAO <- subset(FAO, Country != \"China, Macao SAR\") # Remove Macao, neglible potoato\nFAO <- subset(FAO, Country != \"China, Hong Kong SAR\") # Remove Hong Kong, neglible potoato\nFAO[, 2][FAO[, 2] == \"China, Taiwan Province of\"] <- \"Taiwan\"\nFAO[, 2][FAO[, 2] == \"Sudan (former)\"] <- \"Sudan\"\nFAO[, 2][FAO[, 2] == \"Cabo Verde\"] <- \"Cape Verde\"\nFAO[, 2][FAO[, 2] == \"Venezuela (Bolivarian Republic of)\"] <- \"Venezuela\"\nFAO[, 2][FAO[, 2] == \"Russian Federation\"] <- \"Russia\"\nFAO[, 2][FAO[, 2] == \"C\\xf4te d'Ivoire\"] <- \"Ivory Coast\"\nFAO[, 2][FAO[, 2] == \"Iran (Islamic Republic of)\"] <- \"Iran\"\nFAO[, 2][FAO[, 2] == \"France\"] <- sum(FAO[, 10][FAO[, 2] == \"France\" &&\n                                                  \"R\\xe9union\"])\nFAO[, 2][FAO[, 2] == 0] <- \"France\"\nFAO <- subset(FAO, Country != \"R\\xe9union\")\n\n# create an object of only Nepal for map of change in Nepal\nnepal <- subset(NE, admin == \"Nepal\")\n\n\nchange <- A2_risk - CRUCL2.0_risk\n\nNE@data <- left_join(NE@data, FAO, by = c(\"admin\" = \"Country\"))\n\nvalues <- extract(CRUCL2.0_risk, NE, fun = mean, na.rm = TRUE, sp = TRUE) \nvalues <- extract(A2_risk, values, fun = mean, na.rm = TRUE, sp = TRUE)\nvalues <- extract(change, values, fun = mean, na.rm = TRUE, sp = TRUE)\n\nvalues@data$id <- rownames(values@data)\nvalues_f <- fortify(values, region = \"id\")\nvalues_f <- left_join(values_f, values@data, by = \"id\")\nvalues_f$CRUCL2.0_SimCastMeta_Susceptible_Prediction[is.na(values_f$CRUCL2.0_SimCastMeta_Susceptible_Prediction)] <- 0\nvalues_f$A2_SimCastMeta_Susceptible_Prediction[is.na(values_f$A2_SimCastMeta_Susceptible_Prediction)] <- 0\nvalues_f$change <- values_f$A2_SimCastMeta_Susceptible_Prediction - values_f$CRUCL2.0_SimCastMeta_Susceptible_Prediction\n\nraster_df <- crop(change, nepal) # crop and mask the raster file\nraster_df <- mask(raster_df, nepal)\nraster_df <- data.frame(rasterToPoints(raster_df)) # convert raster object to dataframe for ggplot2\n\navg_breaks <- seq(-0.8, 1.75, by = 0.25)\nvalues_f$cuts <- cut(values_f$change,\n                     breaks = avg_breaks,\n                     include.lowest = TRUE)\n\nlb_breaks <- seq(-4, 4, by = 1)\nlabs <- seq(-3, 4, by = 1)\nraster_df$cuts <- cut(raster_df$layer,\n                      breaks = lb_breaks,\n                      labels = labs,\n                      include.lowest = TRUE)\n\n\naverages <- na.omit(data.frame(values@data$sovereignt,\n                               values@data$Yield,\n                               values@data$AreaHarvested,\n                               values@data$CRUCL2.0_SimCastMeta_Susceptible_Prediction,\n                               values@data$A2_SimCastMeta_Susceptible_Prediction,\n                               values@data$layer))\nnames(averages) <- c(\"Country\", \"Yield\", \"HaPotato\", \"CRU_BlightRisk\",\n                     \"A2_BlightRisk\", \"Change\")\n\n\n# Data visualisation -----------------------------------------------------------\n\n# Global average change per country\nggplot() +\n  geom_polygon(data = values_f, \n               aes(x = long, \n                   y = lat, \n                   group = group, \n                   fill = cuts), \n               colour = \"black\", size = 0.25) + \n  scale_fill_viridis() +\n  theme_tufte() +\n  xlab(\"Longitude\") +\n  ylab(\"Latitude\") +\n  ggtitle(\"Change Daily Blight Unit Accumulation Per Potato Growing Season\") +\n  coord_map(\"mollweide\")\n\n# Plot Nepal (After to Figure 9 from Sparks et al. 2014), not exact, but close enough\nggplot(data = nepal) +\n  geom_polygon(aes(x = long, \n                   y = lat, \n                   group = group)) +\n  geom_tile(data = raster_df,\n            aes(x = x, \n                y = y, \n                fill = cuts,\n                colour = cuts), \n            size = 0.4) +\n  scale_fill_manual(values = c(\"#65C0A3\", \"#A8DCA2\", \"#CACACA\", \"#FDDF89\",\n                               \"#FCAB60\", \"#F36B42\", \"#D33E4E\", \"#880383\"), \n                    name = \"Blight\\nunits\") +\n  scale_colour_manual(values = c(\"#65C0A3\", \"#A8DCA2\", \"#CACACA\", \"#FDDF89\",\n                                 \"#FCAB60\", \"#F36B42\", \"#D33E4E\", \"#880383\"), \n                    name = \"Blight\\nunits\") +\n  theme_minimal() +\n  xlab(\"Longitude\") +\n  ylab(\"Latitude\") +\n  coord_map(projection = \"lambert\", lat0 = 26.34, lat1 = 30.45)\n\n\n## Sort the data frame by potato producers\nsorted <- averages[order(averages$HaPotato), ]\ntop10 <- data.frame(tail(sorted, 10))\n\ntop10 \n\nggplot(top10, aes(x = HaPotato, y = Change, size = Yield/10000,\n                  label = Country)) +\n  geom_point(colour = \"white\", fill = \"red\", shape = 21, alpha = 0.5) + \n  scale_size_area(max_size = 30, \"Yield (T/Ha)\") +\n  xlab(\"Potato production (Ha)\") +\n  ylab(\"Change in daily blight unit accumulation\") +\n  geom_text(size = 4)\n\n\nsorted_blight <- averages[order(averages$Change), ]\ntop10_blight <- data.frame(tail(sorted_blight, 10))\ntop10_blight$Country <- factor(top10_blight$Country,\n                               levels = top10_blight$Country[order(top10_blight$Change)])\n\ntop10_blight\n\nggplot(top10_blight, aes(x = factor(Country), y = Change)) +\n  geom_bar(stat = \"identity\", aes(fill = Change)) +\n  xlab(\"Country\") +\n  scale_fill_gradient(\"Blight Units\") +\n  ylab(\"Blight Units\") +\n  coord_flip()\n\n# eos\n",
    "created" : 1467181017166.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "324607444",
    "id" : "FBD6E41B",
    "lastKnownWriteTime" : 1467181028,
    "last_content_update" : 1467181028530,
    "path" : "~/Development/Global-Late-Blight-MetaModelling/02 - Analysis/03 - Extract_Visualise_Risk_by_Country.R",
    "project_path" : "02 - Analysis/03 - Extract_Visualise_Risk_by_Country.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}